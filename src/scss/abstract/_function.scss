@use 'sass:map';
@use 'sass:list';

@function generate-shadow-value(
	$shadow-separation-map,
	$shadow-direction-map,
	$size-key,
	$size-value,
	$direction: null
) {
	@if $size-key == 'none' {
		@return none;
	}

	$separation: map.get($shadow-separation-map, $size-key);
	$blur: list.nth($size-value, 1);
	$y-offset: list.nth($size-value, 2);
	$color: list.nth($size-value, 3);

	@if not $direction {
		@return 0 0 $blur $y-offset $color;
	}

	$direction-values: map.get($shadow-direction-map, $direction);
	$x-multiplier: list.nth($direction-values, 1);
	$y-multiplier: list.nth($direction-values, 2);

	$x-offset: $separation * $x-multiplier;
	$y-offset-direction: $separation * $y-multiplier;

	@return $x-offset $y-offset-direction $blur $y-offset $color;
}

@function generate-shadow-map($shadow-size-map, $shadow-separation-map, $shadow-direction-map) {
	$result: (
		'none': none,
	);

	@each $size-key, $size-value in $shadow-size-map {
		@if $size-key != 'none' {
			$result: map.set(
				$result,
				$size-key,
				generate-shadow-value($shadow-separation-map, $shadow-direction-map, $size-key, $size-value)
			);

			@each $direction-key, $direction-value in $shadow-direction-map {
				$result: map.set(
					$result,
					'#{$direction-key}-#{$size-key}',
					generate-shadow-value(
						$shadow-separation-map,
						$shadow-direction-map,
						$size-key,
						$size-value,
						$direction-key
					)
				);
			}
		}
	}

	@return $result;
}
